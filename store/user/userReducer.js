import { createSlice } from '@reduxjs/toolkit';
import { stat } from 'react-native-fs';
import { Login,  Register} from './userThunk';

const initialState = {
  status: "",
  isLogin: false,
  data:  {},
};

export const userSlice = createSlice({
    name: 'user',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
      logout(state, action) {
        state.isLogin = false
        state.data = {}
      }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
      builder
        .addCase(Login.pending, (state, action) => {
          state.status= "loading"
        })
        .addCase(Login.fulfilled, (state, action) => {
          state.status = 'idle';
          state.data = action.payload;
          state.isLogin = true
        })
       .addCase(Login.rejected, (state, action) => {
            state.status = "error"
        })
        .addCase(Register.pending, (state, action) => {
          state.status= "loading"
        })
        .addCase(Register.fulfilled, (state, action) => {
          state.status = 'idle';
          state.data = action.payload;
          state.isLogin = true
        })
       .addCase(Register.rejected, (state, action) => {
            state.status = "error"
        });
    },
  });
  export const { logout } = userSlice.actions;
  // more code...
  export default userSlice.reducer;
  