import { createSlice } from '@reduxjs/toolkit';
import {GetPlaylist} from './playlistThunk';

const initialState = {
  status: "",
  data:  [],
  currentPlaylist: {}
};

export const playlistSlice = createSlice({
    name: 'playlist',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
      setCurrentPlaylist(state, action) {
        state.currentPlaylist = action.payload
      }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
      builder
        .addCase(GetPlaylist.pending, (state, action) => {
          state.status= "loading"
        })
        .addCase(GetPlaylist.fulfilled, (state, action) => {
          state.status = 'idle';
          console.log("payload state", action.payload)
          state.data = action.payload;
        })
       .addCase(GetPlaylist.rejected, (state, action) => {
            state.status = "error"
          });
    },
  });
  export const { setCurrentPlaylist } = playlistSlice.actions;
  export default playlistSlice.reducer;
  